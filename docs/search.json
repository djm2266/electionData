[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Election Data Analysis",
    "section": "",
    "text": "1 Introduction\nWe plan to analyze patterns, trends, and shifts in the political landscape of the United States over time. By examining presidential, Senate, and House elections from 1976 to 2020, we aim to uncover insights into voter behavior, party dominance, regional political trends, and the impact of national events on electoral outcomes. This period, spanning more than four decades, covers significant milestones in U.S. history, including shifts in party alignment, demographic changes, and major political movements.\nWhy We Chose This Topic: Elections are an important part of democracy, and understanding how they evolve over time is critical for understanding the broader socio-political condition of the nation. This topic is particularly relevant because it captures federal elections across three key levels: presidential, Senate, and House. This allows for the exploration of how national events and regional issues influence electoral outcomes. We aim to use this analysis to identify patterns that are often obscured in shorter-term studies, such as long-term trends in partisanship, the rise of swing states, and the interaction between national and local election dynamics.\nKey Questions of Interest: How have voting patterns shifted over time at the state level for presidential, Senate, and House elections? Which states consistently lean toward a particular party, and how have swing states evolved? How closely do Senate and House election outcomes correlate with presidential election results in the same state and year? Are there instances of ticket splitting (voters choosing candidates from different parties for different offices) and what might explain these instances? How do significant historical events (for example, the 2008 financial crisis, the post-9/11 era, or the civil rights movement) reflect in election results? How has voter turnout changed across states and election types over the years?\nContext for Readers: Presidential Elections (every 4 years): Electors vote for the president and vice president based on the Electoral College system. This often highlights the polarization or unity of the national electorate. Senate Elections (every 6 years per senator): Each state elects two senators, with approximately one-third of the Senate up for election every two years. Senate races often reflect statewide issues and can show how state dynamics diverge from national trends. House Elections (every 2 years): Each state’s representation in the House of Representatives is proportional to its population. These races tend to be more localized and can provide insights into regional political dynamics. By comparing these election types over time, we aim to provide a comprehensive view of how U.S. political behavior evolves at both the state and national levels.\nThis study uses detailed datasets for presidential, Senate, and House elections from 1976 to 2020, enabling an in-depth exploration of these themes. Our findings can serve as a valuable resource for anyone interested in the patterns and processes that shape U.S. elections.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nOur project draws on several datasets hosted by the MIT Election Lab. Primary Source: https://electionlab.mit.edu/data\nData Sources:\nIssues/Problems:\nTemporal Mismatch: The House election data extends through 2022, while presidential and Senate data only go up to 2020. To ensure consistency, we will analyze all datasets only up to 2020. Runoff Election Data: Significant missing data exists for runoff elections, particularly in Senate and House results. This component will be excluded from the analysis to maintain data reliability. Granularity: While presidential data is state-level, House data is district-level. This mismatch in granularity may limit the scope of comparative analyses. Aggregation or normalization may be necessary in some cases. Data Quality: There are missing or incomplete fields in some years for minor-party candidates and inconsistencies in party naming conventions across datasets.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "",
    "text": "Presidential Election Results (1976-2020) Source: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/42MVDX Description: This dataset contains state-level presidential election results, including vote counts for major parties, minor parties, and independent candidates. It provides data on total votes cast, voter turnout, and percentage share of each candidate in every presidential election from 1976 to 2020. Data Format: CSV file with columns for state, year, candidate, party, vote count, percentage share, and total votes cast. Frequency of Updates: Static dataset last updated to include results through 2020. Dimensions: Rows represent individual state-election combinations, with thousands of records. Planned Import: Data will be imported into R Studio using the read.csv function.\nSenate Election Results (1976-2020) Source: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/PEJ5QU Description: This dataset provides results for Senate elections, including candidate vote counts, party affiliations, and special elections. Data covers statewide elections and includes party-specific turnout information. Data Format: CSV file with columns for state, year, candidate, party, votes, percentage share, and whether the election was a regular or special election. Frequency of Updates: Static dataset last updated to include results through 2020. Dimensions: State-year combinations with additional rows for runoff elections. Planned Import: Data will be imported into R Studio using the read.csv function.\nHouse Election Results (1976-2022) Source: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/IG0UN2 Description: This dataset includes congressional district-level results for House elections, with details on candidates, vote counts, and party affiliations. Data Format: CSV file with columns for district, state, year, candidate, party, vote count, and total votes. Frequency of Updates: Static dataset last updated to include results through 2022. Dimensions: Rows represent congressional district-year combinations, totaling tens of thousands of records. Planned Import: Data will be imported into R Studio using the read.csv function.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\n[1] \"C:/Users/jingm/AppData/Local/R/win-library/4.4\"\n[2] \"C:/Program Files/R/R-4.4.1/library\"            \n\n\n\n\nNOTE: In the following pairs of variables, the missingness pattern of the second is a subset of the first.\n Please verify whether they are in fact logically distinct variables.\n     [,1]             [,2]     \n[1,] \"party_detailed\" \"writein\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe summary of data information and the visualization of missing values in the presidential election dataset reveals that most variables are complete, with no missing values, such as year, state, and totalvotes. However, the notes variable is entirely missing (100%), which likely indicates that there were no special remarks or annotations needed for the observations. Given its lack of content and relevance, we have decided to remove this column from the dataset to streamline the analysis. Additionally, the writein variable shows a very small proportion of missing values (less than 0.1%), which are unlikely to significantly impact the dataset’s overall integrity. Since the writein column has only three missing values, which might be due to oversight during data collection or data loss, we have decided to remove the rows containing these missing values to maintain the integrity of the analysis.\n\n\nCode\n#house_missing &lt;- mi::missing_data.frame(house)\n#image(house_missing)\n\nprint(redav::plot_missing(house, num_char = 5, max_cols = 10))\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\n\n\n\n\nCode\nrunoff_missing &lt;- house[is.na(house$runoff), ]\nrunoff_missing_by_year &lt;- runoff_missing |&gt;count(year)\nggplot(runoff_missing_by_year, aes(x = factor(year), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  labs(title = \"Distribution of Runoff Missing Values by Year\",\n    x = \"Year\",\n    y = \"Number of Missing Values\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nCode\nhouse_cleaned &lt;- house[, !(colnames(house) %in% c(\"runoff\"))]\nprint(redav::plot_missing(house_cleaned, num_char = 5, max_cols = 10))\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\n\n\n\n\nThe summary of data information and the visualization shows that the missing values in the runoff column are distributed relatively evenly across the years, suggesting that the missing data may be due to inconsistencies or issues in the data collection process. Given the high percentage of missing values in this column (28%) and its relatively low importance for our analysis, we have decided to remove the runoff column entirely to streamline the dataset and focus on more relevant variables.\n\n\nCode\nprint(redav::plot_missing(senate, num_char = 5, max_cols = 10))\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\n\n\n\n\nThe plot shows that there are no missing values in senate data, so we do not make any modification to this data.\n\n\nCode\n# library(dplyr)\n# library(tidyr)\n# house_data &lt;- house_cleaned |&gt; \n#   filter(year&lt;=2020)\n# \n# house_data_grouped &lt;- house_data |&gt;\n#   group_by(year, state, state_po, party, district) |&gt;\n#   summarise(\n#     candidatevotes = sum(candidatevotes),\n#     totalvotes = first(totalvotes)\n#   ) |&gt;\n#   ungroup()\n# \n# house_data_grouped &lt;- house_data_grouped |&gt;\n#   mutate(\n#     simplified_party = case_when(\n#       grepl(\"DEMOCRAT\", party, ignore.case = TRUE) ~ \"DEMOCRAT_House\",\n#       grepl(\"REPUBLICAN\", party, ignore.case = TRUE) ~ \"REPUBLICAN_House\",\n#       grepl(\"LIBERTARIAN\", party, ignore.case = TRUE) ~ \"LIBERTARIAN_House\",\n#       TRUE ~ \"OTHER_House\"\n#     )\n#   )\n# \n# house_data_simplified &lt;- house_data_grouped |&gt;\n#   group_by(year, state, state_po, simplified_party) |&gt;\n#   summarise(candidate_house = sum(candidatevotes), total_house = sum(totalvotes)) |&gt;\n#   ungroup() |&gt;\n#   mutate(vote_share = round(100*candidate_house / total_house,2)) |&gt;\n#   select(-candidate_house)\n# \n# house_pivoted_data &lt;- house_data_simplified |&gt;\n#   pivot_wider(\n#     names_from = simplified_party,  \n#     values_from = vote_share,       \n#     values_fill = 0                 \n#   ) |&gt;\n#   group_by(year, state, state_po) |&gt;\n#   summarise(across(everything(), sum))\n# ```\n# ```{r}\n# senate_data &lt;- senate |&gt; \n#   filter(year&lt;=2020)\n# \n# senate_data_grouped &lt;- senate_data |&gt;\n#   group_by(year, state, state_po, party_simplified) |&gt;\n#   summarise(\n#     candidatevotes = sum(candidatevotes),\n#     totalvotes = first(totalvotes)\n#   ) |&gt;\n#   mutate(vote_share = round(100*candidatevotes / totalvotes,2)) |&gt;\n#   ungroup()\n# \n# senate_data_simplified &lt;- senate_data_grouped |&gt;\n#   group_by(year, state, state_po, party_simplified) |&gt;\n#   summarise(total_senate = first(totalvotes), vote_share = sum(vote_share)) |&gt;\n#   ungroup()\n# \n# senate_pivoted_data &lt;- senate_data_simplified |&gt;\n#   pivot_wider(\n#     names_from = party_simplified,  \n#     values_from = vote_share,       \n#     values_fill = 0                 \n#   ) |&gt;\n#   rename(DEMOCRAT_Senate = \"DEMOCRAT\", \n#          REPUBLICAN_Senate = \"REPUBLICAN\",\n#          LIBERTARIAN_Senate = \"LIBERTARIAN\",\n#          OTHER_Senate = \"OTHER\"\n#          )\n# \n# ```\n# ```{r}\n# president_data_grouped &lt;- president_cleaned |&gt;\n#   group_by(year, state, state_po, party_simplified) |&gt;\n#   summarise(\n#     candidatevotes = sum(candidatevotes),\n#     totalvotes = first(totalvotes)\n#   ) |&gt;\n#   mutate(vote_share = round(100*candidatevotes / totalvotes,2)) |&gt;\n#   ungroup()\n# \n# president_data_simplified &lt;- president_data_grouped |&gt;\n#   group_by(year, state, state_po, party_simplified) |&gt;\n#   summarise(total_president = first(totalvotes), vote_share = sum(vote_share)) |&gt;\n#   ungroup()\n# \n# president_pivoted_data &lt;- president_data_simplified |&gt;\n#   pivot_wider(\n#     names_from = party_simplified,  \n#     values_from = vote_share,       \n#     values_fill = 0                 \n#   ) |&gt;\n#   rename(DEMOCRAT_President = \"DEMOCRAT\", \n#          REPUBLICAN_President = \"REPUBLICAN\",\n#          LIBERTARIAN_President = \"LIBERTARIAN\",\n#          OTHER_President = \"OTHER\"\n#          )\n# ```\n# \n# ```{r}\n# states &lt;- data.frame(\n#   state = c(\n#     \"ALABAMA\", \"ALASKA\", \"ARIZONA\", \"ARKANSAS\", \"CALIFORNIA\", \n#     \"COLORADO\", \"CONNECTICUT\", \"DELAWARE\", \"FLORIDA\", \"GEORGIA\", \n#     \"HAWAII\", \"IDAHO\", \"ILLINOIS\", \"INDIANA\", \"IOWA\", \n#     \"KANSAS\", \"KENTUCKY\", \"LOUISIANA\", \"MAINE\", \"MARYLAND\", \n#     \"MASSACHUSETTS\", \"MICHIGAN\", \"MINNESOTA\", \"MISSISSIPPI\", \"MISSOURI\", \n#     \"MONTANA\", \"NEBRASKA\", \"NEVADA\", \"NEW HAMPSHIRE\", \"NEW JERSEY\", \n#     \"NEW MEXICO\", \"NEW YORK\", \"NORTH CAROLINA\", \"NORTH DAKOTA\", \"OHIO\", \n#     \"OKLAHOMA\", \"OREGON\", \"PENNSYLVANIA\", \"RHODE ISLAND\", \"SOUTH CAROLINA\", \n#     \"SOUTH DAKOTA\", \"TENNESSEE\", \"TEXAS\", \"UTAH\", \"VERMONT\", \n#     \"VIRGINIA\", \"WASHINGTON\", \"WEST VIRGINIA\", \"WISCONSIN\", \"WYOMING\", \n#     \"DISTRICT OF COLUMBIA\", \"PUERTO RICO\"\n#   ),\n#   state_po = c(\n#     \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \n#     \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \n#     \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \n#     \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \n#     \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \n#     \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \n#     \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \n#     \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \n#     \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \n#     \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \n#     \"DC\", \"PR\"\n#   )\n# )\n# \n# years &lt;- 1976:2020\n# \n# state_year_tibble &lt;- expand_grid(\n#   year = years,\n#   states\n# )\n# \n# joined_data &lt;- state_year_tibble |&gt;\n#   left_join(house_pivoted_data, by = c(\"year\", \"state\", \"state_po\")) |&gt;\n#   left_join(senate_pivoted_data, by = c(\"year\", \"state\", \"state_po\")) |&gt;\n#   left_join(president_pivoted_data, by = c(\"year\", \"state\", \"state_po\")) |&gt;\n#   mutate(across(c(total_house, total_senate, total_president), ~ replace_na(., 0))) |&gt;\n#   mutate(across(everything(), ~ replace_na(., 0.00)))\n# \n# write.csv(joined_data, 'joined_data.csv', row.names=FALSE)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "Code\ndata &lt;- read.csv('joined_data.csv')\n\n\n##Stacked Bar Chart of Vote Percentages by Party Across Elections\n\n\n\n\n\n\n\n\n\nThe stacked bar chart depicts the percentage of votes received by Democrats, Republicans, Libertarians, and other parties across House, Senate, and Presidential elections over the years. In all election types, the chart highlights the dominance of Democrats and Republicans, with third-party candidates consistently receiving only a small fraction of the vote. Presidential elections show slightly higher third-party participation, such as in 1992 and 2016, where “Other” parties gained noticeable shares, reflecting unique election dynamics in those years. House and Senate elections demonstrate remarkable stability in the two-party system, with Democrats and Republicans each capturing approximately half of the total vote, though regional and state-level shifts likely contribute to variations in specific years. The overall trend underscores the entrenched dominance of the two-party system in U.S. politics and the limited but notable impact of third-party candidates in Presidential elections compared to Congressional races.\n##Highlighted Bar Chart of State Each Party Won By Election\n\n\nCode\n# Prepare the data to determine the winning party\nwinning_party_data &lt;- joined_data |&gt;\n  mutate(Election_Type = \"House\") |&gt;\n  select(year, Election_Type, DEMOCRAT_House, REPUBLICAN_House) |&gt;\n  rename(\n    DEMOCRAT = DEMOCRAT_House,\n    REPUBLICAN = REPUBLICAN_House\n  ) |&gt;\n  mutate(\n    DEMOCRAT = replace_na(DEMOCRAT, 0),\n    REPUBLICAN = replace_na(REPUBLICAN, 0)\n  ) |&gt;\n  filter(DEMOCRAT != 0 | REPUBLICAN != 0) |&gt;  \n  filter(DEMOCRAT != REPUBLICAN) |&gt;         \n  mutate(\n    Winner = ifelse(DEMOCRAT &gt; REPUBLICAN, \"Democrat\", \"Republican\")\n  ) |&gt;\n  bind_rows(\n    joined_data |&gt;\n      mutate(Election_Type = \"Senate\") |&gt;\n      select(year, Election_Type, DEMOCRAT_Senate, REPUBLICAN_Senate) |&gt;\n      rename(\n        DEMOCRAT = DEMOCRAT_Senate,\n        REPUBLICAN = REPUBLICAN_Senate\n      ) |&gt;\n      mutate(\n        DEMOCRAT = replace_na(DEMOCRAT, 0),\n        REPUBLICAN = replace_na(REPUBLICAN, 0)\n      ) |&gt;\n      filter(DEMOCRAT != 0 | REPUBLICAN != 0) |&gt;  \n      filter(DEMOCRAT != REPUBLICAN) |&gt;        \n      mutate(\n        Winner = ifelse(DEMOCRAT &gt; REPUBLICAN, \"Democrat\", \"Republican\")\n      ),\n    joined_data |&gt;\n      mutate(Election_Type = \"President\") |&gt;\n      select(year, Election_Type, DEMOCRAT_President, REPUBLICAN_President) |&gt;\n      rename(\n        DEMOCRAT = DEMOCRAT_President,\n        REPUBLICAN = REPUBLICAN_President\n      ) |&gt;\n      mutate(\n        DEMOCRAT = replace_na(DEMOCRAT, 0),\n        REPUBLICAN = replace_na(REPUBLICAN, 0)\n      ) |&gt;\n      filter(DEMOCRAT != 0 | REPUBLICAN != 0) |&gt;\n      mutate(\n        Winner = ifelse(DEMOCRAT &gt; REPUBLICAN, \"Democrat\", \"Republican\")\n      )\n  )\n\n# Create a bar chart highlighting the winning party\nggplot(winning_party_data, aes(x = factor(year), fill = Winner)) +\n  geom_bar(stat = \"count\", position = \"dodge\") +\n  facet_wrap(~Election_Type, ncol = 1, scales = \"free_x\") +\n  scale_fill_manual(values = c(\"Democrat\" = \"#91BFDB\", \"Republican\" = \"#D73027\")) +\n  labs(\n    title = \"Winning Party by Year Across Elections\",\n    x = \"Year\",\n    y = \"Number of State Won\",\n    fill = \"Party\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n\nThe bar chart compares the number of states won by Democrats and Republicans across House, Senate, and Presidential elections over the years. For House elections, there is a relatively balanced distribution of states won by both parties, with fluctuations reflecting shifts in voter preferences during midterms and general elections. Presidential elections show more pronounced swings, with notable Republican dominance during landslide years like 1984 and stronger Democratic performance in years such as 1992 and 2008. The Senate elections exhibit greater stability, with each party maintaining a consistent number of states won over time, reflecting entrenched partisan control in many states. Overall, the chart highlights the competitive nature of elections, the influence of national trends on Presidential contests, and the stability of Senate races. These trends emphasize the importance of key battleground states in determining election outcomes, particularly for Presidential and House races.\n##Line Chart of Total Votes Over the Years by Election Type\n\n\nCode\n# Prepare the data for all election types\ntotal_votes_data &lt;- joined_data |&gt;\n  # Select the relevant columns for each election type\n  select(year, total_house, total_senate, total_president) |&gt;\n  pivot_longer(\n    cols = c(total_house, total_senate, total_president),\n    names_to = \"Election_Type\",\n    values_to = \"Total_Votes\"\n  ) |&gt;\n  mutate(\n    Election_Type = case_when(\n      Election_Type == \"total_house\" ~ \"House\",\n      Election_Type == \"total_senate\" ~ \"Senate\",\n      Election_Type == \"total_president\" ~ \"President\"\n    ),\n    year = as.numeric(year)  \n  ) |&gt;\n  filter(!is.na(Total_Votes) & Total_Votes &gt; 0) |&gt;  \n  group_by(year, Election_Type) |&gt;\n  summarise(Total_Votes = sum(Total_Votes), .groups = \"drop\")  \n\n# Create the line graph\nggplot(total_votes_data, aes(x = year, y = Total_Votes / 1e6, color = Election_Type)) +\n  geom_line(size = 1.2) +\n  scale_color_manual(values = c(\"House\" = \"#91BFDB\", \"Senate\" = \"#D73027\", \"President\" = \"#A6D96A\")) +\n  labs(\n    title = \"Total Votes Over the Years by Election Type\",\n    x = \"Year\",\n    y = \"Total Votes (Millions)\",\n    color = \"Election Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"bottom\"\n  )\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nThe line chart illustrates total votes cast over the years across House, Senate, and Presidential elections, revealing distinct trends in voter participation. Presidential elections consistently show an upward trend in voter turnout, reflecting their high stakes and national importance, with a noticeable increase in recent decades. In contrast, House elections exhibit significant fluctuations, corresponding to midterm and general election cycles, but the overall trend indicates a steady rise in participation. Senate elections, while generally stable, show consistently lower turnout compared to House and Presidential elections, likely reflecting reduced voter engagement in statewide contests. The growing divergence between Presidential and Senate elections emphasizes the increasing focus on national elections over local contests. Overall, the chart highlights the evolving dynamics of voter participation, with Presidential elections commanding the largest and growing share of voter attention.\n##Choropleth Map of Dominant Party by State Over The Years\n\n\nCode\njoined_data_filtered &lt;- joined_data |&gt;\n  filter(total_president &gt; 0)\n\njoined_data_filtered &lt;- joined_data_filtered |&gt;\n  mutate(dominant_party = case_when(\n    DEMOCRAT_President &gt; REPUBLICAN_President &\n      DEMOCRAT_President &gt; OTHER_President &\n      DEMOCRAT_President &gt; LIBERTARIAN_President ~ \"Democrat\",\n    REPUBLICAN_President &gt; DEMOCRAT_President &\n      REPUBLICAN_President &gt; OTHER_President &\n      REPUBLICAN_President &gt; LIBERTARIAN_President ~ \"Republican\",\n    OTHER_President &gt; DEMOCRAT_President &\n      OTHER_President &gt; REPUBLICAN_President &\n      OTHER_President &gt; LIBERTARIAN_President ~ \"Other\",\n    LIBERTARIAN_President &gt; DEMOCRAT_President &\n      LIBERTARIAN_President &gt; REPUBLICAN_President &\n      LIBERTARIAN_President &gt; OTHER_President ~ \"Libertarian\",\n    TRUE ~ \"Tie\" \n  ))\n\nstate_dominant_party_president &lt;- joined_data_filtered |&gt;\n  group_by(state) |&gt;\n  count(dominant_party) |&gt;\n  slice_max(n) |&gt;\n  ungroup() |&gt;\n  mutate(region = tolower(state)) \n\nstates_map &lt;- map_data(\"state\")\nmap_data &lt;- left_join(states_map, state_dominant_party_president, by = \"region\")\n\n\nWarning in left_join(states_map, state_dominant_party_president, by = \"region\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 3526 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nCode\nggplot(map_data, aes(x = long, y = lat, group = group, fill = dominant_party)) +\n  geom_polygon(color = \"white\") +\n  scale_fill_manual(values = c(\n    \"Democrat\" = \"#91BFDB\",\n    \"Republican\" = \"#D73027\",\n    \"Other\" = \"gray\",\n    \"Libertarian\" = \"#FDE725\",\n    \"Tie\" = \"purple\"\n  )) +\n  labs(\n    title = \"Dominant Party by State Over The Years\",\n    fill = \"Dominant Party\"\n  ) +\n  theme_minimal() +\n  theme(axis.text = element_blank(), axis.title = element_blank())\n\n\n\n\n\n\n\n\n\nThe choropleth map illustrates the dominant political party (Democrat or Republican) by state over the analyzed years, highlighting regional patterns of party control. Republican dominance is evident across much of the South, Midwest, and Mountain West, reflecting strongholds in traditionally conservative states. In contrast, Democrats dominate in the Northeast, West Coast, and parts of the Upper Midwest, showcasing areas of liberal and progressive influence. These patterns align with historical trends, where coastal and urban states lean Democratic, while rural and Southern states favor Republicans. The map underscores the entrenched partisan divisions in the U.S., emphasizing the geographic polarization in voting preferences that shapes national elections. Additionally, it highlights the role of key swing states in breaking these regional trends, which are not apparent in this static analysis of dominance.\n##Parallel Coordinates Plot of Margins of Victory Across Election Types\n\n\nCode\nlibrary(GGally)\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\nCode\n# Calculate margins of victory\nmargins_data &lt;- joined_data |&gt;\n  # Select relevant columns\n  select(year, state, DEMOCRAT_House, REPUBLICAN_House, LIBERTARIAN_House,\n         DEMOCRAT_Senate, REPUBLICAN_Senate, LIBERTARIAN_Senate,\n         DEMOCRAT_President, REPUBLICAN_President, LIBERTARIAN_President) |&gt;\n  mutate(\n    Margin_House = abs(DEMOCRAT_House - REPUBLICAN_House),\n    Margin_Senate = abs(DEMOCRAT_Senate - REPUBLICAN_Senate),\n    Margin_President = abs(DEMOCRAT_President - REPUBLICAN_President)\n  ) |&gt;\n  select(year, state, Margin_House, Margin_Senate, Margin_President) |&gt;\n  filter(!is.na(Margin_House) & !is.na(Margin_Senate) & !is.na(Margin_President)) \n\n# Create the parallel coordinate plot\nggparcoord(\n  data = margins_data,\n  columns = 3:5,            # Columns for Margin_House, Margin_Senate, Margin_President\n  groupColumn = 1,          # Group by year\n  scale = \"globalminmax\",   # Scale all axes to a common range\n  showPoints = TRUE,        # Add points to the lines\n  alphaLines = 0.9          # Increase transparency to make lines more visible\n) +\n  labs(\n    title = \"Parallel Coordinate Plot of Margins of Victory Across Election Types\",\n    x = \"Election Type\",\n    y = \"Margin of Victory\",\n    color = \"Year\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThe parallel coordinate plot visualizes the margins of victory across House, Senate, and Presidential elections over time, with color intensity indicating election years. The majority of election margins fall within a consistent range, demonstrating relatively stable competitiveness across the three election types. However, Senate elections often show the largest margins of victory, highlighting reduced competitiveness in many states compared to House and Presidential races. Presidential elections tend to have narrower margins, reflecting a closer two-party competition at the national level. The progression of colors from darker (earlier years) to lighter (more recent years) shows that the overall pattern remains consistent over decades, with occasional spikes indicating landslide victories. This analysis underscores the varying competitiveness of different election types, with Senate races often being less contested, and Presidential elections remaining the most tightly fought contests.\n##Alluvial Chart of Party Preference Flow in Senate, House, and President Elections\n\n\nCode\nlibrary(ggalluvial)\njoined_data_filtered_house &lt;- joined_data |&gt;\n  filter(total_house &gt; 0) \n\njoined_data_filtered_house &lt;- joined_data_filtered_house |&gt;\n  mutate(dominant_party_house = case_when(\n    DEMOCRAT_House &gt; REPUBLICAN_House &\n      DEMOCRAT_House &gt; OTHER_House &\n      DEMOCRAT_House &gt; LIBERTARIAN_House ~ \"Democrat\",\n    REPUBLICAN_House &gt; DEMOCRAT_House &\n      REPUBLICAN_House &gt; OTHER_House &\n      REPUBLICAN_House &gt; LIBERTARIAN_House ~ \"Republican\",\n    OTHER_House &gt; DEMOCRAT_House &\n      OTHER_House &gt; REPUBLICAN_House &\n      OTHER_House &gt; LIBERTARIAN_House ~ \"Other\",\n    LIBERTARIAN_House &gt; DEMOCRAT_House &\n      LIBERTARIAN_House &gt; REPUBLICAN_House &\n      LIBERTARIAN_House &gt; OTHER_House ~ \"Libertarian\",\n    TRUE ~ \"Tie\"\n  ))\n\nstate_dominant_party_house &lt;- joined_data_filtered_house |&gt;\n  group_by(state) |&gt;\n  count(dominant_party_house) |&gt;\n  slice_max(n) |&gt;\n  ungroup() |&gt;\n  mutate(region = tolower(state))  \n\njoined_data_filtered_senate &lt;- joined_data |&gt;\n  filter(total_senate &gt; 0) \n\njoined_data_filtered_senate &lt;- joined_data_filtered_senate |&gt;\n  mutate(dominant_party_senate = case_when(\n    DEMOCRAT_Senate &gt; REPUBLICAN_Senate &\n      DEMOCRAT_Senate &gt; OTHER_Senate &\n      DEMOCRAT_Senate &gt; LIBERTARIAN_Senate ~ \"Democrat\",\n    REPUBLICAN_Senate &gt; DEMOCRAT_Senate &\n      REPUBLICAN_Senate &gt; OTHER_Senate &\n      REPUBLICAN_Senate &gt; LIBERTARIAN_Senate ~ \"Republican\",\n    OTHER_Senate &gt; DEMOCRAT_Senate &\n      OTHER_Senate &gt; REPUBLICAN_Senate &\n      OTHER_Senate &gt; LIBERTARIAN_Senate ~ \"Other\",\n    LIBERTARIAN_Senate &gt; DEMOCRAT_Senate &\n      LIBERTARIAN_Senate &gt; REPUBLICAN_Senate &\n      LIBERTARIAN_Senate &gt; OTHER_Senate ~ \"Libertarian\",\n    TRUE ~ \"Tie\"\n  ))\n\nstate_dominant_party_senate &lt;- joined_data_filtered_senate |&gt;\n  group_by(state) |&gt;\n  count(dominant_party_senate) |&gt;\n  slice_max(n) |&gt;\n  ungroup() |&gt;\n  mutate(region = tolower(state)) \n\nalluvial_data &lt;- state_dominant_party_president |&gt;\n  select(state, dominant_party_president = dominant_party) |&gt;\n  left_join(\n    state_dominant_party_house |&gt;\n      select(state, dominant_party_house = dominant_party_house),\n    by = \"state\"\n  ) |&gt;\n  left_join(\n    state_dominant_party_senate |&gt;\n      select(state, dominant_party_senate = dominant_party_senate),\n    by = \"state\"\n  ) |&gt;\n  mutate(count = 1)  \n\nggplot(alluvial_data,\n       aes(axis1 = dominant_party_senate,\n           axis2 = dominant_party_house,\n           axis3 = dominant_party_president,\n           y = count)) +\n  geom_alluvium(aes(fill = dominant_party_house), width = 0.2) +\n  geom_stratum(width = 0.3, fill = \"grey\", color = \"black\") +\n  geom_text(stat = \"stratum\", aes(label = recode(after_stat(stratum),\n                                                 \"Democrat\" = \"Dem\",\n                                                 \"Republican\" = \"Rep\",\n                                                 \"Libertarian\" = \"Lib\",\n                                                 \"Other\" = \"Oth\",\n                                                 \"Tie\" = \"Tie\"))) +\n  scale_x_discrete(limits = c(\"Senate\", \"House\", \"President\"), expand = c(0.15, 0.15)) +\n  scale_fill_manual(values = c(\n    \"Democrat\" = \"#4575B4\",\n    \"Republican\" = \"#D73027\",\n    \"Other\" = \"#808080\",\n    \"Libertarian\" = \"#FFD700\",\n    \"Tie\" = \"#FFFFBF\"\n  )) +\n  labs(\n    title = \"Party Preference Flow in Senate, House, and President Elections\",\n    x = \"Election Type\",\n    y = \"Number of States\",\n    fill = \"House Party\"\n  ) +\n  theme_minimal()\n\n\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\n\n\n\n\n\n\n\n\n\nThe Alluvial diagram illustrates the flow of party preferences across Senate, House, and Presidential elections, highlighting shifts in political dominance across states. A majority of states maintain consistent party alignment between election types, with most Democratic-leaning states (Dem) staying blue across all categories and Republican-leaning states (Rep) remaining red. However, the crossover flows between Senate and House elections indicate some variability in party preferences, suggesting that voters may differentiate between the roles of these offices when casting their ballots. Presidential elections display the most alignment with House results, reflecting a correlation between federal-level executive and legislative preferences. The overall pattern reinforces the dominance of the two-party system while highlighting the nuanced shifts that occur across election types, particularly in competitive states where control may alternate between Democrats and Republicans.\n##Line Graph of Total Votes Over Years by State\n\n\nCode\n# Prepare the data\nstate_votes_data &lt;- joined_data |&gt;\n  select(year, state, total_house, total_senate, total_president) |&gt;\n  mutate(\n    Total_Votes = total_house + total_senate + total_president\n  ) |&gt;\n  group_by(year, state) |&gt;\n  summarise(Total_Votes = sum(Total_Votes, na.rm = TRUE), .groups = \"drop\") |&gt;\n  filter(all(!is.na(Total_Votes)) & Total_Votes &gt; 0)  # Remove years with missing or zero data\n\noutliers &lt;- state_votes_data |&gt;\n  group_by(state) |&gt;\n  summarise(Max_Votes = max(Total_Votes), .groups = \"drop\") |&gt;\n  top_n(5, Max_Votes)  # Select top 5 states with highest total votes\n\n# Create the plot\nggplot() +\n  geom_line(\n    data = state_votes_data,\n    aes(x = year, y = Total_Votes / 1e6, group = state),\n    color = \"gray\", size = 0.7, show.legend = FALSE\n  ) +\n  geom_line(\n    data = state_votes_data |&gt; filter(state %in% outliers$state),\n    aes(x = year, y = Total_Votes / 1e6, color = state, group = state),\n    size = 1.2\n  ) +\n  labs(\n    title = \"Total Votes Over Years by State\",\n    x = \"Year\",\n    y = \"Total Votes (Millions)\",\n    color = \"Outlier States\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"bottom\"\n  )\n\n\n\n\n\n\n\n\n\nThe line chart displays the total number of votes cast in elections over time, segmented by state, with outlier states highlighted. The chart reveals that states such as California, Texas, New York, Florida, and Georgia consistently show higher total votes compared to other states, reflecting their larger populations and electoral significance. California, in particular, stands out with a sharp spike in total votes around the early 1990s and steady high turnout in subsequent years. Other large states like Texas and New York exhibit similar trends with noticeable peaks in presidential election years. The overall pattern suggests higher voter participation in populous states, especially during major national elections. In contrast, smaller states maintain relatively stable and lower vote totals over time, with limited fluctuations. These trends underscore the outsized influence of populous states in shaping electoral outcomes and highlight the importance of analyzing voter turnout patterns for understanding regional and national political dynamics.\n##Boxplot Showing Distribution of Party Support Rates by State\n\n\nCode\nboxplot_data &lt;- joined_data |&gt;\n  filter(\n    DEMOCRAT_House + REPUBLICAN_House + LIBERTARIAN_House + OTHER_House &gt; 0 |\n    DEMOCRAT_Senate + REPUBLICAN_Senate + LIBERTARIAN_Senate + OTHER_Senate &gt; 0 |\n    DEMOCRAT_President + REPUBLICAN_President + LIBERTARIAN_President + OTHER_President &gt; 0\n  ) |&gt;\n  group_by(state) |&gt;\n  summarise(\n    House_Democrat = mean(DEMOCRAT_House[DEMOCRAT_House + REPUBLICAN_House + LIBERTARIAN_House + OTHER_House &gt; 0], na.rm = TRUE),\n    House_Republican = mean(REPUBLICAN_House[DEMOCRAT_House + REPUBLICAN_House + LIBERTARIAN_House + OTHER_House &gt; 0], na.rm = TRUE),\n    House_Libertarian = mean(LIBERTARIAN_House[DEMOCRAT_House + REPUBLICAN_House + LIBERTARIAN_House + OTHER_House &gt; 0], na.rm = TRUE),\n    House_Other = mean(OTHER_House[DEMOCRAT_House + REPUBLICAN_House + LIBERTARIAN_House + OTHER_House &gt; 0], na.rm = TRUE),\n    Senate_Democrat = mean(DEMOCRAT_Senate[DEMOCRAT_Senate + REPUBLICAN_Senate + LIBERTARIAN_Senate + OTHER_Senate &gt; 0], na.rm = TRUE),\n    Senate_Republican = mean(REPUBLICAN_Senate[DEMOCRAT_Senate + REPUBLICAN_Senate + LIBERTARIAN_Senate + OTHER_Senate &gt; 0], na.rm = TRUE),\n    Senate_Libertarian = mean(LIBERTARIAN_Senate[DEMOCRAT_Senate + REPUBLICAN_Senate + LIBERTARIAN_Senate + OTHER_Senate &gt; 0], na.rm = TRUE),\n    Senate_Other = mean(OTHER_Senate[DEMOCRAT_Senate + REPUBLICAN_Senate + LIBERTARIAN_Senate + OTHER_Senate &gt; 0], na.rm = TRUE),\n    President_Democrat = mean(DEMOCRAT_President[DEMOCRAT_President + REPUBLICAN_President + LIBERTARIAN_President + OTHER_President &gt; 0], na.rm = TRUE),\n    President_Republican = mean(REPUBLICAN_President[DEMOCRAT_President + REPUBLICAN_President + LIBERTARIAN_President + OTHER_President &gt; 0], na.rm = TRUE),\n    President_Libertarian = mean(LIBERTARIAN_President[DEMOCRAT_President + REPUBLICAN_President + LIBERTARIAN_President + OTHER_President &gt; 0], na.rm = TRUE),\n    President_Other = mean(OTHER_President[DEMOCRAT_President + REPUBLICAN_President + LIBERTARIAN_President + OTHER_President &gt; 0], na.rm = TRUE)\n  ) |&gt;\n  pivot_longer(\n    cols = -state,  \n    names_to = c(\"Office\", \"Party\"), \n    names_sep = \"_\", \n    values_to = \"SupportRate\" \n  )\n\nggplot(boxplot_data, aes(x = Party, y = SupportRate, fill = Party)) +\n  geom_boxplot(outlier.color = \"red\", outlier.shape = 16) +\n  labs(\n    title = \"Distribution of Party Support Rates by Office and State\",\n    x = \"Party\", y = \"Support Rate (%)\"\n  ) +\n  scale_fill_manual(values = c(\n    \"Democrat\" = \"#4575B4\",\n    \"Republican\" = \"#D73027\",\n    \"Libertarian\" = \"#FFD700\",\n    \"Other\" = \"grey\"\n  )) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)\n  ) +\n  facet_wrap(~ Office)\n\n\nWarning: Removed 4 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nThe box plot displays the distribution of party support rates for Democrats, Republicans, Libertarians, and other parties across House, Senate, and Presidential elections. Key observations highlight that Democrats and Republicans consistently receive higher median support rates compared to third parties, with Republicans often achieving slightly higher medians, especially in Senate and Presidential elections. Libertarian and other parties have significantly lower support rates, with outliers indicating occasional higher-than-usual performances. Presidential elections show a narrower interquartile range for major parties, reflecting a more competitive two-party system compared to House and Senate races. In contrast, House elections exhibit a slightly broader range, indicating more variability in party support across states. Overall, the data underscores the dominance of the two major parties, with third-party influence remaining marginal across all election types.\n##Bar Chart of Total Swings by State for Presidential Elections\n\n\nCode\n# Step 1: Filter and clean the data for Presidential elections\ncleaned_data &lt;- joined_data |&gt;\n  select(year, state, DEMOCRAT_President, REPUBLICAN_President, total_president) |&gt;\n  filter(!is.na(DEMOCRAT_President) & !is.na(REPUBLICAN_President) & total_president &gt; 0) |&gt;  # Remove missing or zero data\n  arrange(state, year)  # Ensure proper ordering by state and year\n\n# Step 2: Identify winning party and swings\nswing_data &lt;- cleaned_data |&gt;\n  mutate(\n    Winning_Party = case_when(\n      DEMOCRAT_President &gt; REPUBLICAN_President ~ \"Democrat\",\n      REPUBLICAN_President &gt; DEMOCRAT_President ~ \"Republican\",\n      TRUE ~ \"Tie\"\n    )\n  ) |&gt;\n  group_by(state) |&gt;\n  mutate(\n    Previous_Winner = lag(Winning_Party),\n    Swing = ifelse(Winning_Party != Previous_Winner & !is.na(Previous_Winner), \"Swing\", \"No Swing\")\n  ) |&gt;\n  ungroup()\n\n# Step 3: Summarize winning proportions by state\nswing_summary &lt;- swing_data |&gt;\n  group_by(state, Winning_Party) |&gt;\n  summarise(Years_Won = n(), .groups = \"drop\") |&gt;\n  group_by(state) |&gt;\n  mutate(Proportion = Years_Won / sum(Years_Won))\n\n# Step 4: Count swings by state\nswing_counts &lt;- swing_data |&gt;\n  filter(Swing == \"Swing\") |&gt;\n  count(state, name = \"Swing_Count\")\n\n# Step 5: Visualize the swings\nggplot(swing_counts, aes(x = reorder(state, Swing_Count), y = Swing_Count, fill = Swing_Count)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  labs(\n    title = \"Total Swings by State (Presidential Elections)\",\n    x = \"State\",\n    y = \"Number of Swings\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n\n\n\n\n\n\n\n\n\nThe bar chart illustrates the number of presidential election swings by state, highlighting variations in political dynamics across the country. States like Ohio, Florida, and Wisconsin exhibit the highest number of swings, each showing five transitions between parties over the analyzed years. These states are traditionally considered swing states due to their competitive nature and pivotal role in determining election outcomes. Conversely, most states show only one or two swings, indicating strong partisan consistency and less variability in voting patterns. This analysis underscores the importance of a few key states in shaping presidential elections, emphasizing their significant influence in determining the overall political landscape. The consistent swings in states like Ohio and Florida reaffirm their critical status in election strategies.\n##Relationship Between Total Votes, Swings, and Winning Party for Presidential Elections\n\n\nCode\nlibrary(dplyr)\nlibrary(vcd)\n\n\nWarning: package 'vcd' was built under R version 4.4.2\n\n\nLoading required package: grid\n\n\nCode\n# Step 1: Prepare the data\nmosaic_data &lt;- joined_data |&gt;\n  select(year, state, total_president, DEMOCRAT_President, REPUBLICAN_President) |&gt;\n  filter(!is.na(total_president) & total_president &gt; 0) |&gt;\n  mutate(\n    Total_Vote_Bin = case_when(\n      total_president &lt; 1e6 ~ \"Low (&lt; 1M)\",\n      total_president &lt; 2.5e6 ~ \"Medium (1M-2.5M)\",\n      TRUE ~ \"High (&gt; 2.5M)\"\n    ),\n    Winning_Party = case_when(\n      DEMOCRAT_President &gt; REPUBLICAN_President ~ \"Democrat\",\n      REPUBLICAN_President &gt; DEMOCRAT_President ~ \"Republican\",\n      TRUE ~ \"Tie\"\n    ),\n    Swing = ifelse(\n      DEMOCRAT_President &gt; REPUBLICAN_President & lag(REPUBLICAN_President, default = NA) &gt; DEMOCRAT_President |\n      REPUBLICAN_President &gt; DEMOCRAT_President & lag(DEMOCRAT_President, default = NA) &gt; REPUBLICAN_President,\n      \"Swing\",\n      \"No Swing\"\n    )\n  ) |&gt;\n  filter(!is.na(Swing))  # Remove rows where Swing calculation might be invalid\n\n# Step 2: Summarize the data for a contingency table\nmosaic_table &lt;- table(\n  Total_Vote_Bin = mosaic_data$Total_Vote_Bin,\n  Swing = mosaic_data$Swing,\n  Winning_Party = mosaic_data$Winning_Party\n)\n\n# Step 3: Create the mosaic plot\nmosaic(\n  mosaic_table,\n  main = \"Relationship of Total Votes, Swings, Winning Party\",\n  shade = TRUE,         # Automatically adds shading for distinction\n  direction = \"v\",      # Use vertical divisions\n  legend = TRUE,        # Include a legend for shading\n  labeling = labeling_values,  # Add value labels inside the plot\n  labeling_args = list(\n    offset_labels = c(left = 1, top = 0.5),  # Adjust label offsets for readability\n    offset_varnames = c(left = 2, top = 1)   # Adjust variable name offsets\n  )\n)\n\n\n\n\n\n\n\n\n\nThe mosaic plot reveals distinct patterns in electoral outcomes based on total votes, swing status, and winning party. In high-turnout elections (over 2.5 million votes), Democrats dominate in “No Swing” scenarios, with residuals indicating they overperform compared to expectations. Conversely, Republicans excel in low-turnout elections (under 1 million votes), particularly in “No Swing” cases, where their strong performance aligns with residual patterns. Swing elections, regardless of turnout, tend to exhibit a more balanced competition between the two parties, with Democrats performing slightly better in “Swing” scenarios across all turnout bins. Overall, the plot highlights the strong association between turnout levels and party dominance, with Democrats thriving in high-turnout environments and Republicans leveraging their advantage in lower-turnout contests. These findings suggest that voter turnout plays a critical role in shaping electoral outcomes and party success.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5  Conclusion",
    "section": "",
    "text": "This comprehensive analysis of election data across House, Senate, and Presidential races from 1976 to 2020 highlights critical insights into U.S. electoral dynamics. Key findings include the dominance of the two-party system, with Democrats and Republicans consistently controlling the majority of the vote across all election types. Presidential elections demonstrated the highest voter turnout and the most visible third-party influence, while Senate races showed the least variability in margins of victory. Swing state analysis identified battleground states such as Ohio and Florida, reaffirming their pivotal role in shaping national outcomes. Regional patterns in dominant party control revealed persistent partisan divides, with coastal and urban states favoring Democrats and rural, Southern states leaning Republican. Despite these insights, the study faced limitations, including the lack of detailed demographic data and third-party vote granularity. Future research could incorporate demographic and geographic analyses to better understand voter behavior and explore predictive modeling for swing state trends. This project underscored the importance of visualizing electoral data to uncover patterns, assess competitiveness, and identify opportunities for increased voter engagement.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  }
]