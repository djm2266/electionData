[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Election Data Analysis",
    "section": "",
    "text": "1 Introduction\nWe plan to analyze patterns, trends, and shifts in the political landscape of the United States over time. By examining presidential, Senate, and House elections from 1976 to 2020, we aim to uncover insights into voter behavior, party dominance, regional political trends, and the impact of national events on electoral outcomes. This period, spanning more than four decades, covers significant milestones in U.S. history, including shifts in party alignment, demographic changes, and major political movements.\nWhy We Chose This Topic: Elections are an important part of democracy, and understanding how they evolve over time is critical for understanding the broader socio-political condition of the nation. This topic is particularly relevant because it captures federal elections across three key levels: presidential, Senate, and House. This allows for the exploration of how national events and regional issues influence electoral outcomes. We aim to use this analysis to identify patterns that are often obscured in shorter-term studies, such as long-term trends in partisanship, the rise of swing states, and the interaction between national and local election dynamics.\nKey Questions of Interest: How have voting patterns shifted over time at the state level for presidential, Senate, and House elections? Which states consistently lean toward a particular party, and how have swing states evolved? How closely do Senate and House election outcomes correlate with presidential election results in the same state and year? Are there instances of ticket splitting (voters choosing candidates from different parties for different offices) and what might explain these instances? How do significant historical events (for example, the 2008 financial crisis, the post-9/11 era, or the civil rights movement) reflect in election results? How has voter turnout changed across states and election types over the years?\nContext for Readers: Presidential Elections (every 4 years): Electors vote for the president and vice president based on the Electoral College system. This often highlights the polarization or unity of the national electorate. Senate Elections (every 6 years per senator): Each state elects two senators, with approximately one-third of the Senate up for election every two years. Senate races often reflect statewide issues and can show how state dynamics diverge from national trends. House Elections (every 2 years): Each state’s representation in the House of Representatives is proportional to its population. These races tend to be more localized and can provide insights into regional political dynamics. By comparing these election types over time, we aim to provide a comprehensive view of how U.S. political behavior evolves at both the state and national levels.\nThis study uses detailed datasets for presidential, Senate, and House elections from 1976 to 2020, enabling an in-depth exploration of these themes. Our findings can serve as a valuable resource for anyone interested in the patterns and processes that shape U.S. elections.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nOur project draws on several datasets hosted by the MIT Election Lab. Primary Source: https://electionlab.mit.edu/data\nData Sources:\nIssues/Problems:\nTemporal Mismatch: The House election data extends through 2022, while presidential and Senate data only go up to 2020. To ensure consistency, we will analyze all datasets only up to 2020. Runoff Election Data: Significant missing data exists for runoff elections, particularly in Senate and House results. This component will be excluded from the analysis to maintain data reliability. Granularity: While presidential data is state-level, House data is district-level. This mismatch in granularity may limit the scope of comparative analyses. Aggregation or normalization may be necessary in some cases. Data Quality: There are missing or incomplete fields in some years for minor-party candidates and inconsistencies in party naming conventions across datasets.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "",
    "text": "Presidential Election Results (1976-2020) Source: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/42MVDX Description: This dataset contains state-level presidential election results, including vote counts for major parties, minor parties, and independent candidates. It provides data on total votes cast, voter turnout, and percentage share of each candidate in every presidential election from 1976 to 2020. Data Format: CSV file with columns for state, year, candidate, party, vote count, percentage share, and total votes cast. Frequency of Updates: Static dataset last updated to include results through 2020. Dimensions: Rows represent individual state-election combinations, with thousands of records. Planned Import: Data will be imported into R Studio using the read.csv function.\nSenate Election Results (1976-2020) Source: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/PEJ5QU Description: This dataset provides results for Senate elections, including candidate vote counts, party affiliations, and special elections. Data covers statewide elections and includes party-specific turnout information. Data Format: CSV file with columns for state, year, candidate, party, votes, percentage share, and whether the election was a regular or special election. Frequency of Updates: Static dataset last updated to include results through 2020. Dimensions: State-year combinations with additional rows for runoff elections. Planned Import: Data will be imported into R Studio using the read.csv function.\nHouse Election Results (1976-2022) Source: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/IG0UN2 Description: This dataset includes congressional district-level results for House elections, with details on candidates, vote counts, and party affiliations. Data Format: CSV file with columns for district, state, year, candidate, party, vote count, and total votes. Frequency of Updates: Static dataset last updated to include results through 2022. Dimensions: Rows represent congressional district-year combinations, totaling tens of thousands of records. Planned Import: Data will be imported into R Studio using the read.csv function.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\noptions(repos = c(CRAN = \"https://cloud.r-project.org/\")) \ninstall.packages(\"naniar\")\n\n\nInstalling package into 'C:/Users/jingm/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n\n\npackage 'naniar' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\jingm\\AppData\\Local\\Temp\\RtmpK2ULXG\\downloaded_packages\n\n\nCode\nlibrary(naniar)\n\n\nWarning: package 'naniar' was built under R version 4.4.2\n\n\nCode\nlibrary(ggplot2)\n.libPaths()\n\n\n[1] \"C:/Users/jingm/AppData/Local/R/win-library/4.4\"\n[2] \"C:/Program Files/R/R-4.4.1/library\"            \n\n\nCode\ninstall.packages(\"naniar\", dependencies = TRUE)\n\n\nWarning: package 'naniar' is in use and will not be installed\n\n\nCode\ninstall.packages(\"dplyr\")\n\n\nInstalling package into 'C:/Users/jingm/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n\n\npackage 'dplyr' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'dplyr'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\Users\\jingm\\AppData\\Local\\R\\win-library\\4.4\\00LOCK\\dplyr\\libs\\x64\\dplyr.dll\nto C:\\Users\\jingm\\AppData\\Local\\R\\win-library\\4.4\\dplyr\\libs\\x64\\dplyr.dll:\nPermission denied\n\n\nWarning: restored 'dplyr'\n\n\n\nThe downloaded binary packages are in\n    C:\\Users\\jingm\\AppData\\Local\\Temp\\RtmpK2ULXG\\downloaded_packages\n\n\nCode\nlibrary(dplyr)\n\n\nWarning: package 'dplyr' was built under R version 4.4.2\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\ninstall.packages(\"DataExplorer\")\n\n\nInstalling package into 'C:/Users/jingm/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n\n\npackage 'DataExplorer' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\jingm\\AppData\\Local\\Temp\\RtmpK2ULXG\\downloaded_packages\n\n\nCode\nlibrary(DataExplorer)\n\n\nWarning: package 'DataExplorer' was built under R version 4.4.2\n\n\n\n\nCode\npresident &lt;- read.csv('1976-2020-president.csv')\nhouse &lt;- read.csv('1976-2022-house.csv')\nsenate &lt;- read.csv('1976-2020-senate.csv')\n\n\n\n\nCode\nsummary(is.na(president))\n\n\n    year           state          state_po       state_fips     \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:4287      FALSE:4287      FALSE:4287      FALSE:4287     \n                                                                \n state_cen        state_ic         office        candidate      \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:4287      FALSE:4287      FALSE:4287      FALSE:4287     \n                                                                \n party_detailed   writein        candidatevotes  totalvotes     \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:4287      FALSE:4284      FALSE:4287      FALSE:4287     \n                 TRUE :3                                        \n  version         notes         party_simplified\n Mode :logical   Mode:logical   Mode :logical   \n FALSE:4287      TRUE:4287      FALSE:4287      \n                                                \n\n\nCode\ncolSums(is.na(president))\n\n\n            year            state         state_po       state_fips \n               0                0                0                0 \n       state_cen         state_ic           office        candidate \n               0                0                0                0 \n  party_detailed          writein   candidatevotes       totalvotes \n               0                3                0                0 \n         version            notes party_simplified \n               0             4287                0 \n\n\n\n\nCode\npresident_p &lt;- plot_missing(president) + labs(title = \"Missing Values in President Dataset\",\n         x = \"Variables\",\n         y = \"Observations\")\n\npresident_cleaned &lt;- president[, !(colnames(president) %in% c(\"notes\"))]\npresident_cleaned_p &lt;- plot_missing(president_cleaned) +\n  labs(title = \"Missing Values in President Dataset After Cleaning\",\n         x = \"Variables\",\n         y = \"Observations\")\n\n\n\n\nCode\npresident_p\n\n\n\n\n\n\n\n\n\nCode\npresident_cleaned_p\n\n\n\n\n\n\n\n\n\nThe summary of data information and the visualization of missing values in the presidential election dataset reveals that most variables are complete, with no missing values, such as year, state, and totalvotes. However, the notes variable is entirely missing (100%), which likely indicates that there were no special remarks or annotations needed for the observations. Given its lack of content and relevance, we have decided to remove this column from the dataset to streamline the analysis. Additionally, the writein variable shows a very small proportion of missing values (less than 0.1%), which are unlikely to significantly impact the dataset’s overall integrity. Since the writein column has only three missing values, which might be due to oversight during data collection or data loss, we have decided to remove the rows containing these missing values to maintain the integrity of the analysis.\n\n\nCode\nsummary(is.na(house))\n\n\n    year           state          state_po       state_fips     \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:32452     FALSE:32452     FALSE:32452     FALSE:32452    \n                                                                \n state_cen        state_ic         office         district      \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:32452     FALSE:32452     FALSE:32452     FALSE:32452    \n                                                                \n   stage           runoff         special        candidate      \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:32452     FALSE:23796     FALSE:32452     FALSE:32452    \n                 TRUE :8656                                     \n   party          writein           mode         candidatevotes \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:32452     FALSE:32452     FALSE:32452     FALSE:32452    \n                                                                \n totalvotes      unofficial       version        fusion_ticket  \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:32452     FALSE:32452     FALSE:32452     FALSE:32452    \n                                                                \n\n\nCode\ncolSums(is.na(house))\n\n\n          year          state       state_po     state_fips      state_cen \n             0              0              0              0              0 \n      state_ic         office       district          stage         runoff \n             0              0              0              0           8656 \n       special      candidate          party        writein           mode \n             0              0              0              0              0 \ncandidatevotes     totalvotes     unofficial        version  fusion_ticket \n             0              0              0              0              0 \n\n\n\n\nCode\nhouse_p &lt;- plot_missing(house) +\n  labs(title = \"Missing Values in House Dataset\",\n    x = \"Variables\",\n    y = \"Observations\")\n\nrunoff_missing &lt;- house[is.na(house$runoff), ]\nrunoff_missing_by_year &lt;- runoff_missing |&gt;count(year)\nmissing &lt;- ggplot(runoff_missing_by_year, aes(x = factor(year), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  labs(title = \"Distribution of Runoff Missing Values by Year\",\n    x = \"Year\",\n    y = \"Number of Missing Values\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nhouse_cleaned &lt;- house[, !(colnames(house) %in% c(\"runoff\"))]\nhouse_cleaned_p &lt;- plot_missing(house_cleaned) +\n  labs(title = \"Missing Values in House Dataset After Cleaning\",\n    x = \"Variables\",\n    y = \"Observations\")\n\n\n\n\nCode\nhouse_p\n\n\n\n\n\n\n\n\n\nCode\nmissing\n\n\n\n\n\n\n\n\n\nCode\nhouse_cleaned_p\n\n\n\n\n\n\n\n\n\nThe summary of data information and the visualization shows that the missing values in the runoff column are distributed relatively evenly across the years, suggesting that the missing data may be due to inconsistencies or issues in the data collection process. Given the high percentage of missing values in this column (28%) and its relatively low importance for our analysis, we have decided to remove the runoff column entirely to streamline the dataset and focus on more relevant variables.\n\n\nCode\nsummary(is.na(senate))\n\n\n    year           state          state_po       state_fips     \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:3629      FALSE:3629      FALSE:3629      FALSE:3629     \n state_cen        state_ic         office         district      \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:3629      FALSE:3629      FALSE:3629      FALSE:3629     \n   stage          special        candidate       party_detailed \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:3629      FALSE:3629      FALSE:3629      FALSE:3629     \n  writein           mode         candidatevotes  totalvotes     \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:3629      FALSE:3629      FALSE:3629      FALSE:3629     \n unofficial       version        party_simplified\n Mode :logical   Mode :logical   Mode :logical   \n FALSE:3629      FALSE:3629      FALSE:3629      \n\n\nCode\ncolSums(is.na(senate))\n\n\n            year            state         state_po       state_fips \n               0                0                0                0 \n       state_cen         state_ic           office         district \n               0                0                0                0 \n           stage          special        candidate   party_detailed \n               0                0                0                0 \n         writein             mode   candidatevotes       totalvotes \n               0                0                0                0 \n      unofficial          version party_simplified \n               0                0                0 \n\n\n\n\nCode\nsenate_p &lt;- plot_missing(senate) +\n  labs(title = \"Missing Values in Senate Dataset\",\n    x = \"Variables\",\n    y = \"Observations\")\n\n\n\n\nCode\nsenate_p\n\n\n\n\n\n\n\n\n\nThe plot shows that there are no missing values in senate data, so we do not make any modification to this data.\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nhouse_data &lt;- house_cleaned |&gt; \n  filter(year&lt;=2020)\n\nhouse_data_grouped &lt;- house_data |&gt;\n  group_by(year, state, state_po, party, district) |&gt;\n  summarise(\n    candidatevotes = sum(candidatevotes),\n    totalvotes = first(totalvotes)\n  ) |&gt;\n  mutate(vote_share = round(100*candidatevotes / totalvotes,2)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'year', 'state', 'state_po', 'party'. You\ncan override using the `.groups` argument.\n\n\nCode\nhouse_data_grouped &lt;- house_data_grouped |&gt;\n  mutate(\n    simplified_party = case_when(\n      grepl(\"DEMOCRAT\", party, ignore.case = TRUE) ~ \"DEMOCRAT(House)\",\n      grepl(\"REPUBLICAN\", party, ignore.case = TRUE) ~ \"REPUBLICAN(House)\",\n      grepl(\"LIBERTARIAN\", party, ignore.case = TRUE) ~ \"LIBERTARIAN(House)\",\n      TRUE ~ \"OTHER(House)\"\n    )\n  )\n\nhouse_data_simplified &lt;- house_data_grouped |&gt;\n  group_by(year, state, state_po, simplified_party) |&gt;\n  summarise(total_house = sum(totalvotes), vote_share = sum(vote_share)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'year', 'state', 'state_po'. You can\noverride using the `.groups` argument.\n\n\nCode\nhouse_data_simplified\n\n\n# A tibble: 3,797 × 6\n    year state   state_po simplified_party   total_house vote_share\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;                    &lt;int&gt;      &lt;dbl&gt;\n 1  1976 ALABAMA AL       DEMOCRAT(House)        1146699     503.  \n 2  1976 ALABAMA AL       OTHER(House)            929711       1.04\n 3  1976 ALABAMA AL       REPUBLICAN(House)       652072     196.  \n 4  1976 ALASKA  AK       DEMOCRAT(House)         118208      28.9 \n 5  1976 ALASKA  AK       OTHER(House)            118208       0.25\n 6  1976 ALASKA  AK       REPUBLICAN(House)       118208      70.8 \n 7  1976 ARIZONA AZ       DEMOCRAT(House)         729002     195.  \n 8  1976 ARIZONA AZ       LIBERTARIAN(House)      541837       6.85\n 9  1976 ARIZONA AZ       OTHER(House)            355284      10.8 \n10  1976 ARIZONA AZ       REPUBLICAN(House)       729002     188.  \n# ℹ 3,787 more rows\n\n\nCode\nhouse_pivoted_data &lt;- house_data_simplified |&gt;\n  pivot_wider(\n    names_from = simplified_party,  \n    values_from = vote_share,       \n    values_fill = 0                 \n  ) |&gt;\n  group_by(year, state, state_po) |&gt;\n  summarise(across(everything(), sum))\n\n\n`summarise()` has grouped output by 'year', 'state'. You can override using the\n`.groups` argument.\n\n\n\n\nCode\nsenate_data &lt;- senate |&gt; \n  filter(year&lt;=2020)\n\nsenate_data_grouped &lt;- senate_data |&gt;\n  group_by(year, state, state_po, party_simplified) |&gt;\n  summarise(\n    candidatevotes = sum(candidatevotes),\n    totalvotes = first(totalvotes)\n  ) |&gt;\n  mutate(vote_share = round(100*candidatevotes / totalvotes,2)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'year', 'state', 'state_po'. You can\noverride using the `.groups` argument.\n\n\nCode\nsenate_data_simplified &lt;- senate_data_grouped |&gt;\n  group_by(year, state, state_po, party_simplified) |&gt;\n  summarise(total_senate = first(totalvotes), vote_share = sum(vote_share)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'year', 'state', 'state_po'. You can\noverride using the `.groups` argument.\n\n\nCode\nsenate_pivoted_data &lt;- senate_data_simplified |&gt;\n  pivot_wider(\n    names_from = party_simplified,  \n    values_from = vote_share,       \n    values_fill = 0                 \n  )\n\n\n\n\nCode\npresident_data_grouped &lt;- president_cleaned |&gt;\n  group_by(year, state, state_po, party_simplified) |&gt;\n  summarise(\n    candidatevotes = sum(candidatevotes),\n    totalvotes = first(totalvotes)\n  ) |&gt;\n  mutate(vote_share = round(100*candidatevotes / totalvotes,2)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'year', 'state', 'state_po'. You can\noverride using the `.groups` argument.\n\n\nCode\npresident_data_simplified &lt;- president_data_grouped |&gt;\n  group_by(year, state, state_po, party_simplified) |&gt;\n  summarise(total_president = first(totalvotes), vote_share = sum(vote_share)) |&gt;\n  ungroup()\n\n\n`summarise()` has grouped output by 'year', 'state', 'state_po'. You can\noverride using the `.groups` argument.\n\n\nCode\npresident_pivoted_data &lt;- president_data_simplified |&gt;\n  pivot_wider(\n    names_from = party_simplified,  \n    values_from = vote_share,       \n    values_fill = 0                 \n  )\n\n\n\n\nCode\nstates &lt;- data.frame(\n  state = c(\n    \"ALABAMA\", \"ALASKA\", \"ARIZONA\", \"ARKANSAS\", \"CALIFORNIA\", \n    \"COLORADO\", \"CONNECTICUT\", \"DELAWARE\", \"FLORIDA\", \"GEORGIA\", \n    \"HAWAII\", \"IDAHO\", \"ILLINOIS\", \"INDIANA\", \"IOWA\", \n    \"KANSAS\", \"KENTUCKY\", \"LOUISIANA\", \"MAINE\", \"MARYLAND\", \n    \"MASSACHUSETTS\", \"MICHIGAN\", \"MINNESOTA\", \"MISSISSIPPI\", \"MISSOURI\", \n    \"MONTANA\", \"NEBRASKA\", \"NEVADA\", \"NEW HAMPSHIRE\", \"NEW JERSEY\", \n    \"NEW MEXICO\", \"NEW YORK\", \"NORTH CAROLINA\", \"NORTH DAKOTA\", \"OHIO\", \n    \"OKLAHOMA\", \"OREGON\", \"PENNSYLVANIA\", \"RHODE ISLAND\", \"SOUTH CAROLINA\", \n    \"SOUTH DAKOTA\", \"TENNESSEE\", \"TEXAS\", \"UTAH\", \"VERMONT\", \n    \"VIRGINIA\", \"WASHINGTON\", \"WEST VIRGINIA\", \"WISCONSIN\", \"WYOMING\", \n    \"DISTRICT OF COLUMBIA\", \"PUERTO RICO\"\n  ),\n  state_po = c(\n    \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \n    \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \n    \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \n    \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \n    \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \n    \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \n    \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \n    \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \n    \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \n    \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \n    \"DC\", \"PR\"\n  )\n)\n\nyears &lt;- 1976:2020\n\nstate_year_tibble &lt;- expand_grid(\n  year = years,\n  states\n)\n\njoined_data &lt;- state_year_tibble |&gt;\n  left_join(house_pivoted_data, by = c(\"year\", \"state\", \"state_po\")) |&gt;\n  left_join(senate_pivoted_data, by = c(\"year\", \"state\", \"state_po\")) |&gt;\n  left_join(president_pivoted_data, by = c(\"year\", \"state\", \"state_po\")) |&gt;\n  mutate(across(c(total_house, total_senate, total_president), ~ replace_na(., 0))) |&gt;\n  mutate(across(everything(), ~ replace_na(., 0.00)))\n\nwrite.csv(joined_data, 'joined_data.csv', row.names=FALSE)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  }
]